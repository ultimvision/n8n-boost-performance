{
  "active": false,
  "connections": {
    "Validate Input": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update status": {
      "main": [
        [
          {
            "node": "API AssemblyAI | Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update DB": {
      "main": [
        [
          {
            "node": "Wait for assembly webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare data for DB update": {
      "main": [
        [
          {
            "node": "Update DB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for assembly webhook": {
      "main": [
        [
          {
            "node": "Switch on status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API AssemblyAI | Transcript": {
      "main": [
        [
          {
            "node": "Prepare data for DB update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare data for transcript DB update": {
      "main": [
        [
          {
            "node": "Update DB transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update DB transcript": {
      "main": [
        [
          {
            "node": "Prepare successful output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API AssemblyAI | Get Transcript": {
      "main": [
        [
          {
            "node": "Prepare data for transcript DB update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Prepare pending output",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare successful existing output",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare data for transcript error update": {
      "main": [
        [
          {
            "node": "Update DB transcript error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update DB transcript error": {
      "main": [
        [
          {
            "node": "Prepare failed output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch on status": {
      "main": [
        [
          {
            "node": "API AssemblyAI | Get Transcript",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare data for transcript error update",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for assembly webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parent workflow is waiting": {
      "main": [
        [
          {
            "node": "Wake up parent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is successful",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare successful output": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare failed output": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is successful": {
      "main": [
        [],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Parent workflow is waiting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-23T00:26:10.220Z",
  "id": "UVwi3TCIXQycyICF",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Transcribe Audio Assembly AI",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "284cd831-a32e-4fc8-b640-5fbf53ffa197",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "1a445b77-fc13-425b-8a08-27025f990ed2",
              "leftValue": "={{ $json.user_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "d6b1351f-ddb8-454c-a218-cd63e16dfb85",
              "leftValue": "={{ $json.audio_url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f409dcb9-b81b-4cbb-8fc6-a81ac57016b3",
      "name": "Validate Input",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1060,
        2220
      ]
    },
    {
      "parameters": {},
      "id": "80e5fbad-2c5d-4860-ad09-2fdfe0dea651",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        780,
        2220
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"success\": true,\n  \"message\": \"Transcription already processed\",\n  \"data\": {{ JSON.stringify($json) }}\n}\n",
        "options": {}
      },
      "id": "087d9488-48c4-4858-ba0b-f4ae43b39a85",
      "name": "Prepare successful existing output",
      "type": "n8n-nodes-base.set",
      "position": [
        1900,
        1900
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rag_videos",
          "mode": "list",
          "cachedResultName": "rag_videos"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "status": "pending"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "provider",
              "displayName": "provider",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "provider_id",
              "displayName": "provider_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "audio_url",
              "displayName": "audio_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "size",
              "displayName": "size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transcript_provider",
              "displayName": "transcript_provider",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "transcript_provider_id",
              "displayName": "transcript_provider_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "sentiment_analysis",
              "displayName": "sentiment_analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a3646e4c-25ec-4415-b8e0-358651a03422",
      "name": "Update status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1780,
        2200
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "pHTFnAMLpsVnMU56",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"success\": false,\n  \"message\": \"Transcription being processed\",\n  \"data\": {{ JSON.stringify($json) }}\n}\n",
        "options": {}
      },
      "id": "8b94751a-eee3-4a9b-9fcd-66adcc0e0d27",
      "name": "Prepare pending output",
      "type": "n8n-nodes-base.set",
      "position": [
        1900,
        1700
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rag_videos",
          "mode": "list",
          "cachedResultName": "rag_videos"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider",
              "displayName": "provider",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider_id",
              "displayName": "provider_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "audio_url",
              "displayName": "audio_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "size",
              "displayName": "size",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider",
              "displayName": "transcript_provider",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider_id",
              "displayName": "transcript_provider_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "sentiment_analysis",
              "displayName": "sentiment_analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f2342e8b-205a-415f-9dae-8d8b2b064b88",
      "name": "Update DB",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2540,
        2200
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "pHTFnAMLpsVnMU56",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"success\": true,\n  \"message\": \"Transcription processed\",\n  \"data\": {{ JSON.stringify($json) }}\n}\n",
        "options": {}
      },
      "id": "283bffff-31c6-479c-954d-8e74f9829962",
      "name": "Prepare successful output",
      "type": "n8n-nodes-base.set",
      "position": [
        4120,
        2060
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ac24f616-6b6a-4f95-8183-a1a334ce313d",
              "name": "id",
              "value": "={{ $('Execute Workflow Trigger').first().json.id }}",
              "type": "number"
            },
            {
              "id": "c57f1b14-8636-4e97-8138-7341d0705321",
              "name": "status",
              "value": "=transcript_pending",
              "type": "string"
            },
            {
              "id": "4d185541-5eb3-45c3-beaf-01d6b7fdef2c",
              "name": "transcript_provider",
              "value": "assemblyai",
              "type": "string"
            },
            {
              "id": "61f5b20b-74d0-42a7-995e-39185a60118e",
              "name": "transcript_provider_id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f3cf01f1-c544-4ffe-8da0-1a3fb23bd846",
      "name": "Prepare data for DB update",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2300,
        2200
      ]
    },
    {
      "parameters": {
        "resume": "webhook",
        "httpMethod": "POST",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "92d017fb-6cdf-48e4-8d54-43ce563ecf5a",
      "name": "Wait for assembly webhook",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2800,
        2200
      ],
      "webhookId": "00b1287f-7b05-4081-901e-a9b945e6d3cd"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.assemblyai.com/v2/transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "audio_url",
              "value": "={{ $json.audio_url }}"
            },
            {
              "name": "speaker_labels",
              "value": "true"
            },
            {
              "name": "webhook_url",
              "value": "={{ $execution.resumeUrl }}"
            },
            {
              "name": "language_detection",
              "value": "true"
            }
          ]
        },
        "options": {}
      },
      "id": "e8977494-290f-4bc9-9e02-453b0ddb7a15",
      "name": "API AssemblyAI | Transcript",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        2200
      ],
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "qBJLUDTcerWssYGe",
          "name": "Assembly AI Header Auth"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ac24f616-6b6a-4f95-8183-a1a334ce313d",
              "name": "id",
              "value": "={{ $('Execute Workflow Trigger').first().json.id }}",
              "type": "number"
            },
            {
              "id": "c57f1b14-8636-4e97-8138-7341d0705321",
              "name": "status",
              "value": "=completed",
              "type": "string"
            },
            {
              "id": "61f5b20b-74d0-42a7-995e-39185a60118e",
              "name": "caption",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "d052ca30-c65f-4881-b4b0-e97745d5ddcb",
              "name": "metadata",
              "value": "={ \"assembly_ai\": {{ JSON.stringify($json) }} }",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "d29086fd-3230-4d4a-b7f7-2435f3a273bf",
      "name": "Prepare data for transcript DB update",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3620,
        2060
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rag_videos",
          "mode": "list",
          "cachedResultName": "rag_videos"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider",
              "displayName": "provider",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider_id",
              "displayName": "provider_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "audio_url",
              "displayName": "audio_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "size",
              "displayName": "size",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider",
              "displayName": "transcript_provider",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider_id",
              "displayName": "transcript_provider_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "sentiment_analysis",
              "displayName": "sentiment_analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "cec47532-f8d8-453b-8ed2-a236d9e71576",
      "name": "Update DB transcript",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3860,
        2060
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "pHTFnAMLpsVnMU56",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.assemblyai.com/v2/transcript/{{ $json.body.transcript_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "id": "b6a8c548-8b07-4a76-9bfb-8b554303650b",
      "name": "API AssemblyAI | Get Transcript",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        2060
      ],
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "qBJLUDTcerWssYGe",
          "name": "Assembly AI Header Auth"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "pending",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pending"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6772fcab-3cb7-4ca8-951d-83007497cb77",
                    "leftValue": "={{ Boolean($json.caption) }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processed"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "7e03ab8b-594f-444f-a863-60f8c73c9f39",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1420,
        2220
      ]
    },
    {
      "parameters": {
        "errorMessage": "Transcription failed"
      },
      "id": "886ca1e6-9a97-4bc7-933c-93fbc616cf30",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        5420,
        2340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ac24f616-6b6a-4f95-8183-a1a334ce313d",
              "name": "id",
              "value": "={{ $('Execute Workflow Trigger').first().json.id }}",
              "type": "number"
            },
            {
              "id": "c57f1b14-8636-4e97-8138-7341d0705321",
              "name": "status",
              "value": "=transcription_error",
              "type": "string"
            },
            {
              "id": "d052ca30-c65f-4881-b4b0-e97745d5ddcb",
              "name": "metadata",
              "value": "={ \"assembly_ai\": {{ JSON.stringify($json) }} }",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "be266a96-8df7-4062-82ea-8d615ddfb2c0",
      "name": "Prepare data for transcript error update",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3340,
        2320
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rag_videos",
          "mode": "list",
          "cachedResultName": "rag_videos"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider",
              "displayName": "provider",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "provider_id",
              "displayName": "provider_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "audio_url",
              "displayName": "audio_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "size",
              "displayName": "size",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "duration",
              "displayName": "duration",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "caption",
              "displayName": "caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider",
              "displayName": "transcript_provider",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "transcript_provider_id",
              "displayName": "transcript_provider_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "metadata",
              "displayName": "metadata",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "sentiment_analysis",
              "displayName": "sentiment_analysis",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "36057011-da8c-4ab3-b542-9cc02a6bdab4",
      "name": "Update DB transcript error",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3580,
        2320
      ],
      "retryOnFail": true,
      "credentials": {
        "postgres": {
          "id": "pHTFnAMLpsVnMU56",
          "name": "Postgres Supabase"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.status }}",
                    "rightValue": "completed",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "completed"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "61ca1e70-6402-4ffc-98b6-b6fa0fcf4788",
                    "leftValue": "={{ $json.body.status }}",
                    "rightValue": "error",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "error"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "2aae36ac-cbd9-4b82-852d-12d26ff42f49",
      "name": "Switch on status",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3020,
        2200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e24d5cf-d031-4b3c-924a-053af973deba",
              "leftValue": "={{ $('Execute Workflow Trigger').item.json.resumeUrl }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "52224436-3e40-496d-a788-fbea3106e559",
      "name": "Parent workflow is waiting",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4820,
        2180
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"success\": false,\n  \"message\": \"Transcription failed\",\n  \"data\": {{ null }}\n}\n",
        "options": {}
      },
      "id": "eb7f14a4-84bc-4f69-b4f0-8f392b467988",
      "name": "Prepare failed output",
      "type": "n8n-nodes-base.set",
      "position": [
        3840,
        2320
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Execute Workflow Trigger').first().json.resumeUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "success",
              "value": "={{ $json.success }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "7ca76421-de82-4255-887f-e90d137d21ac",
      "name": "Wake up parent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5100,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "042ef820-7f58-4d2e-87ce-680d1e12e4ed",
              "leftValue": "={{ $json.success }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4c111ff9-66cd-457d-b0c8-0896b42267f7",
      "name": "Is successful",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5100,
        2320
      ]
    },
    {
      "parameters": {},
      "id": "e91a0c9f-cba6-43dd-b8fe-e04690b6615c",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4480,
        2180
      ]
    }
  ],
  "repo_name": "n8n-boost-performance",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-10-22T23:32:58.852Z",
      "updatedAt": "2024-10-22T23:32:58.852Z",
      "id": "G3jdJVXc1hCwJbIu",
      "name": "Routine System"
    },
    {
      "createdAt": "2024-10-22T19:06:31.377Z",
      "updatedAt": "2024-10-22T19:06:31.377Z",
      "id": "bKPfZp0igWIPyAvq",
      "name": "Task"
    },
    {
      "createdAt": "2024-06-30T18:43:25.919Z",
      "updatedAt": "2024-06-30T20:11:06.644Z",
      "id": "wETg74dXNmj5dlPh",
      "name": "Assembly AI API"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-10-24T20:47:04.000Z",
  "versionId": "809e28ab-f574-4efa-b5cd-f577b921aff0"
}