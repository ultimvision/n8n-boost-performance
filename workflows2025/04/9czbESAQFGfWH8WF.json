{
  "active": false,
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Data Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compose message": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message": {
      "main": [
        [
          {
            "node": "Get Next Message Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message settings": {
      "main": [
        [
          {
            "node": "Logo Boost Performance IMG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Content": {
      "main": [
        [
          {
            "node": "Create Final HTML Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Logo Boost Performance IMG": {
      "main": [
        [
          {
            "node": "Compose message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Next Message Params": {
      "main": [
        [
          {
            "node": "If Next Message Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Final HTML Message": {
      "main": [
        [
          {
            "node": "Switch Message Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Date Sending": {
      "main": [
        [
          {
            "node": "Update Next Email to Send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Next Message Exists": {
      "main": [
        [
          {
            "node": "If Event Automatisation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Next Email to Send1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Workflow": {
      "main": [
        [
          {
            "node": "If Event ID Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Event ID Exists": {
      "main": [
        [
          {
            "node": "Get Event Details",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Data Workflow Updated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Event Details": {
      "main": [
        [
          {
            "node": "Data Workflow Updated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Workflow Updated": {
      "main": [
        [
          {
            "node": "Replace Variable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Event Automatisation": {
      "main": [
        [
          {
            "node": "Set Next Date Event Sending",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Next Date Sending",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Next Date Event Sending": {
      "main": [
        [
          {
            "node": "Update Next Email to Send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Message Type": {
      "main": [
        [
          {
            "node": "Add Emails to Send in History",
            "type": "main",
            "index": 0
          },
          {
            "node": "Message settings",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SMS Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMS Message": {
      "main": [
        [
          {
            "node": "Twilio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Twilio": {
      "main": [
        [
          {
            "node": "Get Next SMS Message Params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Next SMS Message Params": {
      "main": [
        [
          {
            "node": "If Next Message Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Variable": {
      "main": [
        [
          {
            "node": "Replace Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        []
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-11T01:29:23.607Z",
  "id": "9czbESAQFGfWH8WF",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Send Email Automation for Leads in Boost 2025 CRM - Sub-Workflow",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -752,
        608
      ],
      "id": "0ac41f48-4bde-4a27-b778-6480b5d2bf2e",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -528,
        608
      ],
      "id": "15e653de-8ae4-4061-9612-65b53f87e3bb",
      "name": "Data Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2addc1b4-68a0-4c72-87d6-d47286eef70c",
              "name": "raw",
              "type": "string",
              "value": "={{ \"From: \"+ $('Data Workflow').item.json.De + \"\\nTo: \"+$('Data Workflow').item.json['Contact Email'] + \"\\nSubject: \"+ $('Replace Variable').item.json.Sujet+ \"\\nMIME-Version: 1.0\\nContent-Type: multipart/related; boundary=boundary1\\n\\n--boundary1\\nContent-Type: text/html; charset=UTF-8\\n\\n<html>\\n<body>\\n\"\n+ $('Message settings').item.json.body_html+\"\\n</body>\\n</html>\\n\\n--boundary1\\nContent-Type: \"+$json.mime_type+\"\\nContent-Transfer-Encoding: base64\\nContent-Disposition: inline\\nContent-ID: <image1>\\n\\n\"\n+$json.img_base_64\n+\"\\n\\n--boundary1--\\n\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "88947c4f-a69c-4f94-a23e-29f80d590d4e",
      "name": "Compose message",
      "type": "n8n-nodes-base.set",
      "position": [
        1712,
        608
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/gmail/v1/users/me/messages/send",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "gmailOAuth2",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={ \"raw\": \"{{ $json.raw.base64Encode() }}\"}",
        "options": {}
      },
      "id": "53edef44-9a62-4743-a031-0967021de08e",
      "name": "Send message",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1936,
        608
      ],
      "typeVersion": 4.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "0QV9hRaMqUh5Tw0f",
          "name": "Gmail coach@boostperformance.ai"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c6c3f28e-6689-4c8d-8d78-de4837acb439",
              "name": "body_html",
              "value": "={{ $json.html }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b8bb9acc-38ad-4f42-b0f7-7f650f540bff",
      "name": "Message settings",
      "type": "n8n-nodes-base.set",
      "position": [
        1264,
        608
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "jsCode": "// Validation et récupération des données d'entrée\nconst inputData = $input.first();\nif (!inputData || !inputData.json) {\n  throw new Error(\"Données d'entrée manquantes\");\n}\nconst contenu = inputData.json.Contenu || '';\n\n// Validation et récupération du template HTML depuis le nœud \"Data Workflow\"\nconst dataWorkflowNode = $('Data Workflow').first();\nif (!dataWorkflowNode || !dataWorkflowNode.json) {\n  throw new Error(\"Données manquantes dans le nœud 'Data Workflow'\");\n}\nconst template = dataWorkflowNode.json[\"Template Content\"] || '';\n\n// Fonction utilitaire pour remplacer des placeholders dans une chaîne\nfunction replacePlaceholders(text, placeholders) {\n  for (const key in placeholders) {\n    const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, 'gi');\n    text = text.replace(regex, placeholders[key]);\n  }\n  return text;\n}\n\n// Remplacement du placeholder \"content\" dans le template\nconst finalHtml = replacePlaceholders(template, { content: contenu });\n\n// Retourne l'objet final\nreturn {\n  json: {\n    final_content: finalHtml\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        608
      ],
      "id": "f8c6cfbe-f43e-46b3-9b34-0686dbf3bffb",
      "name": "Replace Content"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "20a18d1b-2274-4909-923d-d88dad9f0437",
              "name": "mime_type",
              "value": "image/png",
              "type": "string"
            },
            {
              "id": "b2e9a7dc-b16c-42a0-873e-487f886edc80",
              "name": "img_base_64",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1488,
        608
      ],
      "id": "ecbf111a-f423-4498-8337-a8b78c610650",
      "name": "Logo Boost Performance IMG"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblbjJYeI54LhHzoS",
          "mode": "list",
          "cachedResultName": "Message Automatisation",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblbjJYeI54LhHzoS"
        },
        "filterByFormula": "=AND({Groupe Automatisation} = \"{{ $('Data Workflow').item.json['Groupe Automatisation'] }}\", {Séquence} = {{ $('Data Workflow').item.json['Prochaine Séquence'] + 1 }}, {Type} = \"{{ $('When Executed by Another Workflow').item.json.Type }}\")",
        "returnAll": false,
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2160,
        608
      ],
      "id": "30446f0c-8d75-4286-83c0-560e165a9e3b",
      "name": "Get Next Message Params",
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblbNb6O4nv6Ye2F8",
          "mode": "list",
          "cachedResultName": "Tâches Automatisations",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblbNb6O4nv6Ye2F8"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Data Workflow').item.json['Task ID'] }}",
            "Prochaine Séquence": "={{ $('If Next Message Exists').item.json['Séquence'] }}",
            "Date Prochaine Action": "={{ $json.nouvelleDate }}",
            "Date Dernière Action": "={{ DateTime.now().setZone('America/Toronto').toISO() }}",
            "Status": "Active"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Date Création",
              "displayName": "Date Création",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Email",
                  "value": "Email"
                },
                {
                  "name": "SMS",
                  "value": "SMS"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Active",
                  "value": "Active"
                },
                {
                  "name": "Complété",
                  "value": "Complété"
                },
                {
                  "name": "Annulé",
                  "value": "Annulé"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Groupe Automatisation",
              "displayName": "Groupe Automatisation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Date Prochaine Action",
              "displayName": "Date Prochaine Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date Dernière Action",
              "displayName": "Date Dernière Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Prochaine Séquence",
              "displayName": "Prochaine Séquence",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Leads ID",
              "displayName": "Leads ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Prénom",
              "displayName": "Prénom",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Description Lead",
              "displayName": "Description Lead",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Newsletter Contact Opt-in",
              "displayName": "Newsletter Contact Opt-in",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Contact Email",
              "displayName": "Contact Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Historique Emails",
              "displayName": "Historique Emails",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3056,
        608
      ],
      "id": "c279965a-c9a9-4c57-aa96-5aec7e90c6f5",
      "name": "Update Next Email to Send",
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblNYEZPN7gkH1Xwl",
          "mode": "list",
          "cachedResultName": "Historique Emails",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblNYEZPN7gkH1Xwl"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Sujet": "={{ $('Replace Variable').item.json.Sujet_not_encoded }}",
            "id": "={{ $('Replace Variable').item.json.link_id }}",
            "Email": "={{ $('Data Workflow').item.json['Contact Email'] }}",
            "Message": "={{ $json.html }}",
            "Automatisation Emails ID": "=['{{ $('Data Workflow').item.json['Message Automatisation ID'] }}']",
            "Tâche ID": "=['{{ $('Data Workflow').item.json[\"Task ID\"] }}']"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Sujet",
              "displayName": "Sujet",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date envoyée",
              "displayName": "Date envoyée",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Message",
              "displayName": "Message",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date Ouverture",
              "displayName": "Date Ouverture",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Adresse IP",
              "displayName": "Adresse IP",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Date Dernier Clic",
              "displayName": "Date Dernier Clic",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Nombre clic",
              "displayName": "Nombre clic",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Tâche ID",
              "displayName": "Tâche ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Automatisation Emails ID",
              "displayName": "Automatisation Emails ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1264,
        416
      ],
      "id": "e9111650-2084-4755-b1a1-42b140f527e4",
      "name": "Add Emails to Send in History",
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extraction et validation des données du node \"Data Workflow\"\nconst dataWorkflowNode = $('Data Workflow').first();\nif (!dataWorkflowNode || !dataWorkflowNode.json) {\n  throw new Error(\"Données manquantes dans le node 'Data Workflow'\");\n}\nconst dataWorkflow = dataWorkflowNode.json;\n\nconst enveloppe = dataWorkflow.html_enveloppe;\nif (typeof enveloppe !== 'string') {\n  throw new Error(\"L'enveloppe HTML (html_enveloppe) est manquante ou invalide dans 'Data Workflow'\");\n}\n\nconst header = dataWorkflow[\"Template Header\"];\nif (typeof header !== 'string') {\n  throw new Error(\"Le header (Template Header) est manquant ou invalide dans 'Data Workflow'\");\n}\n\nlet footer = dataWorkflow[\"Template Footer\"];\nif (typeof footer !== 'string') {\n  throw new Error(\"Le footer (Template Footer) est manquant ou invalide dans 'Data Workflow'\");\n}\n\nconst email = dataWorkflow[\"Contact Email\"] || '';\n\n// Extraction et validation des données d'entrée et d'autres nodes\nconst inputData = $input.first();\nif (!inputData || !inputData.json) {\n  throw new Error(\"Données d'entrée manquantes\");\n}\nconst content = inputData.json.final_content || '';\n\nconst replaceVariableNode = $('Replace Variable').first();\nif (!replaceVariableNode || !replaceVariableNode.json) {\n  throw new Error(\"Données manquantes dans le node 'Replace Variable'\");\n}\nconst link_id = replaceVariableNode.json.link_id;\nif (!link_id) {\n  throw new Error(\"link_id manquant dans le node 'Replace Variable'\");\n}\n\n// Fonction utilitaire pour remplacer des placeholders de la forme {{ key }}\nfunction replacePlaceholders(text, placeholders) {\n  for (const key in placeholders) {\n    const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, 'gi');\n    text = text.replace(regex, placeholders[key]);\n  }\n  return text;\n}\n\n// Remplacement des placeholders dans le footer\nfooter = replacePlaceholders(footer, {\n  tracking_link: `<img src=\"https://suivi.boostperformance.ai/pixel.php?id=${link_id}\" width=\"1\" height=\"1\" style=\"display:none;\" />`,\n  unsubscribe_link: `https://suivi.boostperformance.ai/communication/?email=${email}`\n});\n\n// Intégration des sections (header, content, footer) dans l'enveloppe HTML\nconst htmlFinal = enveloppe\n  .replace('[[header]]', header)\n  .replace('[[content]]', content)\n  .replace('[[footer]]', footer);\n\n// Retourner le résultat final\nreturn [\n  {\n    json: {\n      html: htmlFinal\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        816,
        608
      ],
      "id": "9824b05c-9191-4412-861c-ab6100416784",
      "name": "Create Final HTML Message"
    },
    {
      "parameters": {
        "jsCode": "// Récupération de la valeur des minutes à attendre\nconst minutesAttendre = $input.first().json[\"Minutes Attendre\"];\n//const minutesAvant = $input.first().json[\"Minutes Avant\"];\n\n// Récupération de la date de création au format ISO\nconst dateCreationStr = $('Data Workflow').first().json[\"Date Création\"];\n\n// Conversion de la chaîne en objet Date\nconst dateCreation = new Date(dateCreationStr);\n\n// Calcul de la nouvelle date en ajoutant les minutes (60000 ms = 1 minute)\nconst nouvelleDate = new Date(dateCreation.getTime() + minutesAttendre * 60000);\n\n// Retourner le résultat sous forme d'objet JSON (par exemple, sous la clé 'nouvelleDate')\nreturn { nouvelleDate: nouvelleDate.toISOString() };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2832,
        704
      ],
      "id": "fc035302-230c-4f70-83be-730b4214301f",
      "name": "Set Next Date Sending"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b4d64bb3-df62-41a2-83d1-0c4fb194c504",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2384,
        704
      ],
      "id": "1a4ed30b-2298-4c0b-aa1c-bdb36c75a318",
      "name": "If Next Message Exists"
    },
    {
      "parameters": {
        "operation": "update",
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblbNb6O4nv6Ye2F8",
          "mode": "list",
          "cachedResultName": "Tâches Automatisations",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblbNb6O4nv6Ye2F8"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Data Workflow').item.json['Task ID'] }}",
            "Prochaine Séquence": "=0",
            "Date Prochaine Action": "={{ $json.nouvelleDate }}",
            "Date Dernière Action": "={{ DateTime.now().setZone('America/Toronto').toISO() }}",
            "Status": "Complété"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Date Création",
              "displayName": "Date Création",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Email",
                  "value": "Email"
                },
                {
                  "name": "SMS",
                  "value": "SMS"
                }
              ],
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Active",
                  "value": "Active"
                },
                {
                  "name": "Complété",
                  "value": "Complété"
                },
                {
                  "name": "Annulé",
                  "value": "Annulé"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Groupe Automatisation",
              "displayName": "Groupe Automatisation",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Date Prochaine Action",
              "displayName": "Date Prochaine Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date Dernière Action",
              "displayName": "Date Dernière Action",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Prochaine Séquence",
              "displayName": "Prochaine Séquence",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Leads ID",
              "displayName": "Leads ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            },
            {
              "id": "Prénom",
              "displayName": "Prénom",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Description Lead",
              "displayName": "Description Lead",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Newsletter Contact Opt-in",
              "displayName": "Newsletter Contact Opt-in",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Contact Email",
              "displayName": "Contact Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Historique Emails",
              "displayName": "Historique Emails",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2608,
        800
      ],
      "id": "2ca528b7-c557-4db3-8009-0f29cb2ad1da",
      "name": "Update Next Email to Send1",
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c4d57466-f60a-4ec5-8ef8-f0e1095318d7",
              "leftValue": "={{ $json[\"Événement ID\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -304,
        608
      ],
      "id": "e8fcf419-0104-483f-a8ff-fe525b4dc899",
      "name": "If Event ID Exists"
    },
    {
      "parameters": {
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblhm238pps3Dnm18",
          "mode": "list",
          "cachedResultName": "Événements",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblhm238pps3Dnm18"
        },
        "id": "={{ $json[\"Événement ID\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -80,
        536
      ],
      "id": "4db4dfc3-d567-4f29-9f23-192864f8bed6",
      "name": "Get Event Details",
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f7f32ac-f3c5-44f2-91f8-fd7f7600ed4b",
              "name": "Nom",
              "value": "={{ $json.Nom }}",
              "type": "string"
            },
            {
              "id": "d9d53091-83f6-42e5-9897-f70498b53e7e",
              "name": "Résumé",
              "value": "={{ $json[\"Résumé\"] }}",
              "type": "string"
            },
            {
              "id": "a8a82459-3c74-4229-a29b-a2949e8f5907",
              "name": "Date Event",
              "value": "={{ $json.Date }}",
              "type": "string"
            },
            {
              "id": "cbb13640-ae8d-4266-ab6a-340e328be05f",
              "name": "Résumé SMS",
              "value": "={{ $json[\"Résumé SMS\"] }}",
              "type": "string"
            },
            {
              "id": "18c14183-645d-43a1-a2cc-8b188df4e573",
              "name": "Lien event",
              "value": "={{ $json['Lien Événement'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        144,
        608
      ],
      "id": "6b53ceec-694d-412c-abd4-1a44258bd94d",
      "name": "Data Workflow Updated"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d40ed5d3-cbe6-4703-80bb-e1f09fae2e2a",
              "leftValue": "={{ $('Data Workflow').item.json[\"Groupe Automatisation\"] }}",
              "rightValue": "Événement",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2608,
        608
      ],
      "id": "ef0fac5d-cd77-42c4-833e-b270960798dd",
      "name": "If Event Automatisation"
    },
    {
      "parameters": {
        "jsCode": "// Récupération de la valeur des minutes avant l'événement\nconst minutesAvant = $input.first().json[\"Minutes Avant\"];\n\n// Récupération de la date de création au format ISO\nconst dateEventStr = $('Get Event Details').first().json.Date;\n\n// Conversion de la chaîne en objet Date\nconst dateEvent = new Date(dateEventStr);\n\n// Calcul de la nouvelle date en soustrayant les minutes (60000 ms = 1 minute)\nconst nouvelleDate = new Date(dateEvent.getTime() - minutesAvant * 60000);\n\n// Retourner le résultat sous forme d'objet JSON (par exemple, sous la clé 'nouvelleDate')\nreturn { nouvelleDate: nouvelleDate.toISOString() };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2832,
        512
      ],
      "id": "d40ce3ed-3a8f-423b-87e2-886bb7f5341c",
      "name": "Set Next Date Event Sending"
    },
    {
      "parameters": {
        "from": "15817013500",
        "to": "={{ $('Data Workflow').item.json.Mobile }}",
        "message": "={{ $json['SMS Message'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        1936,
        800
      ],
      "id": "1e8157e2-dd47-4dda-958a-cf39189296c0",
      "name": "Twilio",
      "credentials": {
        "twilioApi": {
          "id": "3EDfa5y0FlM59HDQ",
          "name": "Twilio +15817013500"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Data Workflow').item.json.Type }}",
                    "rightValue": "Email",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "380566df-9df6-462e-a2b8-235ebfbcd617"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Email"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "41c96a89-0903-46e3-9be3-e9febfc49091",
                    "leftValue": "={{ $('Data Workflow').item.json.Type }}",
                    "rightValue": "SMS",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SMS"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        608
      ],
      "id": "22aab7c9-5d47-4d4f-a191-2e7603b414f6",
      "name": "Switch Message Type"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1d0cf7b2-1593-4922-97d8-ca4f9440092b",
              "name": "SMS Message",
              "value": "={{ $('Replace Variable').item.json.Sujet_not_encoded }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1712,
        800
      ],
      "id": "03df5368-987a-4eed-8d9b-b93d37361e93",
      "name": "SMS Message"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "apprCreGpn1y29ohG",
          "mode": "list",
          "cachedResultName": "Boost 2025",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG"
        },
        "table": {
          "__rl": true,
          "value": "tblbjJYeI54LhHzoS",
          "mode": "list",
          "cachedResultName": "Message Automatisation",
          "cachedResultUrl": "https://airtable.com/apprCreGpn1y29ohG/tblbjJYeI54LhHzoS"
        },
        "filterByFormula": "=AND({Groupe Automatisation} = \"{{ $('Data Workflow').item.json['Groupe Automatisation'] }}\", {Séquence} = {{ $('Data Workflow').item.json['Prochaine Séquence'] + 1 }}, {Type} = \"SMS\")",
        "returnAll": false,
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2160,
        800
      ],
      "id": "dcdae46f-8826-4bf8-8398-3775a9231cc0",
      "name": "Get Next SMS Message Params",
      "alwaysOutputData": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "1prPZf1FTg4yZ1Ch",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extraction et validation des données des nœuds\nconst dataWorkflowItem = $('Data Workflow').item;\nif (!dataWorkflowItem || !dataWorkflowItem.json) {\n  throw new Error(\"Données manquantes dans le nœud 'Data Workflow'\");\n}\nconst dataWorkflow = dataWorkflowItem.json;\n\nconst updatedNode = $('Data Workflow Updated').first();\nif (!updatedNode || !updatedNode.json) {\n  throw new Error(\"Données manquantes dans le nœud 'Data Workflow Updated'\");\n}\nconst dataWorkflowUpdated = updatedNode.json;\n\n// Récupération des données nécessaires\nconst prenom = dataWorkflow[\"Prénom\"] || '';\nlet sujet = dataWorkflow.Sujet || '';\nlet contenu = dataWorkflow.Contenu || '';\nlet redirect_link = dataWorkflow[\"Lien redirection\"] || '';\n\nconst sms_summary      = dataWorkflowUpdated['Résumé SMS'] || '';\nconst link_event       = dataWorkflowUpdated[\"Lien event\"] || '';\nconst event_title      = dataWorkflowUpdated.Nom || '';\nconst event_description = dataWorkflowUpdated[\"Résumé\"] || '';\n\n// Fonction utilitaire pour remplacer des placeholders dans une chaîne\nfunction replacePlaceholders(text, placeholders) {\n  for (const key in placeholders) {\n    const regex = new RegExp(`{{\\\\s*${key}\\\\s*}}`, 'gi');\n    text = text.replace(regex, placeholders[key]);\n  }\n  return text;\n}\n\n// Génération d'un identifiant alphanumérique de la longueur spécifiée\nfunction generateRandomId(length) {\n  const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let result = '';\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    const values = new Uint8Array(length);\n    crypto.getRandomValues(values);\n    for (let i = 0; i < length; i++) {\n      result += chars.charAt(values[i] % chars.length);\n    }\n  } else {\n    for (let i = 0; i < length; i++) {\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n  }\n  return result;\n}\n\n// Générer un identifiant aléatoire de 10 caractères\nconst link_id = generateRandomId(10);\n\n// Remplacement des placeholders dans le sujet\nconst sujetPlaceholders = {\n  prenom: prenom,\n  event_title: event_title,\n  sms_summary: sms_summary,\n  link_event: link_event\n};\nsujet = replacePlaceholders(sujet, sujetPlaceholders);\n\n// Remplacement des placeholders dans le contenu (hors liens spéciaux)\nconst contenuPlaceholders = {\n  prenom: prenom,\n  event_title: event_title,\n  event_description: event_description\n};\ncontenu = replacePlaceholders(contenu, contenuPlaceholders);\n\n// Remplacement du placeholder pour le lien de redirection (on encode l'URL pour éviter des problèmes)\nconst encodedRedirectLink = encodeURIComponent(redirect_link);\nconst redirectReplacement = `https://suivi.boostperformance.ai/clk/?id=${link_id}&link=${encodedRedirectLink}`;\ncontenu = contenu.replace(/{{\\s*redirect_link\\s*}}/gi, redirectReplacement);\n\n// Remplacement du placeholder pour le tracking (injection de l'image)\nconst trackingReplacement = `<img src=\"https://suivi.boostperformance.ai/pixel.php?id=${link_id}\" width=\"1\" height=\"1\" style=\"display:none;\" />`;\ncontenu = contenu.replace(/{{\\s*tracking_link\\s*}}/gi, trackingReplacement);\n\n// Encodage du sujet en Base64 UTF-8 (sans capture interne d'éventuelles erreurs)\nconst encodedSubject = `=?UTF-8?B?${Buffer.from(sujet, 'utf-8').toString('base64')}?=`;\n\n// Retourner l'objet final incluant le sujet encodé, le sujet non encodé, le contenu et le link_id généré\nreturn {\n  json: {\n    Sujet: encodedSubject,\n    Sujet_not_encoded: sujet,\n    Contenu: contenu,\n    link_id: link_id\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        368,
        608
      ],
      "id": "84943113-556e-4608-9f0a-06aaeccb0beb",
      "name": "Replace Variable"
    },
    {
      "parameters": {
        "fromEmail": "info@boostperformance.ai",
        "toEmail": "p@justmove.app",
        "subject": "={{ $('Replace Variable').item.json.Sujet_not_encoded }}",
        "html": "={{ $('Message settings').item.json.body_html }}"
      },
      "type": "n8n-nodes-base.mailgun",
      "typeVersion": 1,
      "position": [
        -752,
        192
      ],
      "id": "660ceda9-249a-4a87-aeba-ec55b4eb1432",
      "name": "Mailgun",
      "credentials": {
        "mailgunApi": {
          "id": "satLliGeCIPMLwqS",
          "name": "Mailgun account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mailgun.net/v3/mg.boostperformance.ai/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "mailgunApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "from",
              "value": "={{ $('Data Workflow').item.json.De }}"
            },
            {
              "name": "to",
              "value": "={{ $('Data Workflow').item.json[\"Contact Email\"] }}"
            },
            {
              "name": "subject",
              "value": "={{ $('Replace Variable').item.json.Sujet_not_encoded }}"
            },
            {
              "name": "html",
              "value": "={{ $('Message settings').item.json.body_html }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "inline",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -304,
        -32
      ],
      "id": "24e2b091-39b4-471a-9c43-93903487bedb",
      "name": "HTTP Request",
      "credentials": {
        "mailgunApi": {
          "id": "satLliGeCIPMLwqS",
          "name": "Mailgun account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=data",
        "options": {
          "fileName": "myimage"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -752,
        -480
      ],
      "id": "6a4f151b-3443-4c86-ae8d-ff8935aefa98",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4e38d66d-a221-4321-a570-2641603517c8",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -752,
        -704
      ],
      "id": "d42d2a33-7827-451c-be0b-eb8e86106200",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "url": "https://suivi.boostperformance.ai/logo_boost_gris.png",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        -32
      ],
      "id": "4f32b823-1853-4911-a2de-8b977b10c988",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "const newFileName = 'image1.png';\n\nconst binaryData = {\n  ...items[0].binary.data,\n  fileName: newFileName,\n  mimeType: 'image/png'\n};\n\nreturn [{\n  json: items[0].json,\n  binary: {\n    data: binaryData\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -528,
        -32
      ],
      "id": "d738aa41-e602-43b1-8519-f4790673b832",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b9cbdcdf-03f6-46bd-9ede-be315eb55ae8",
              "name": "Minutes Avant",
              "value": "={{ $json['Minutes Avant'] }}",
              "type": "number"
            },
            {
              "id": "490d346b-674d-432e-8c57-7c5db988fd30",
              "name": "",
              "value": "=",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -752,
        -256
      ],
      "id": "12457bce-ee8b-4dbc-b906-e260d5981082",
      "name": "Edit Fields1"
    }
  ],
  "repo_name": "n8n-boost-performance",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-11-21T18:21:53.875Z",
      "updatedAt": "2024-11-21T18:21:53.875Z",
      "id": "mIoSmAytRJWHrSkp",
      "name": "Dev:Pat"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-01T19:50:16.000Z",
  "versionId": "eab50b57-2936-46f7-8e56-50b3bc08f818"
}