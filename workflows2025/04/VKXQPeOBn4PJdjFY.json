{
  "active": false,
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Convert Text to Upper Case",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert Text to Lower Case",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Random user data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Joke Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI 4o": {
      "ai_languageModel": [
        [
          {
            "node": "Agent IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "CreateEvent": {
      "ai_tool": [
        [
          {
            "node": "Google Calendar MCP",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "DeleteEvent": {
      "ai_tool": [
        [
          {
            "node": "Google Calendar MCP",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SearchEvent": {
      "ai_tool": [
        [
          {
            "node": "Google Calendar MCP",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "UpdateEvent": {
      "ai_tool": [
        [
          {
            "node": "Google Calendar MCP",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar MCP": {
      "ai_tool": [
        [
          {
            "node": "Agent IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Convert Text": {
      "ai_tool": [
        [
          {
            "node": "My Functions Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "My Functions": {
      "ai_tool": [
        [
          {
            "node": "Agent IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Random Jokes": {
      "ai_tool": [
        [
          {
            "node": "My Functions Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Random user data": {
      "main": [
        [
          {
            "node": "Return only some fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate random user data": {
      "ai_tool": [
        [
          {
            "node": "My Functions Server",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quand Chat reçoit un message": {
      "main": [
        [
          {
            "node": "Agent IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mémoire CHAT Temporaire": {
      "ai_memory": [
        [
          {
            "node": "Agent IA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-29T14:38:36.911Z",
  "id": "VKXQPeOBn4PJdjFY",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agent IA MCP - Blaguer et Sérieux",
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "c_fb926399f0d0f2d94a0377068cd9ed9b042ddfaeb509a8e62fba508e6be5d414@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Démonstration Agent IA"
        },
        "limit": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Limit', ``, 'number') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "id": "76376f26-9c5f-44f4-8526-9e85abfb86aa",
      "name": "SearchEvent",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2544,
        528
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YrEdWfp1cuYx8C7F",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_fb926399f0d0f2d94a0377068cd9ed9b042ddfaeb509a8e62fba508e6be5d414@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Démonstration Agent IA"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "description": "={{ $fromAI(\"event_description\", \"The event description\", \"string\") }}",
          "summary": "={{ $fromAI(\"event_title\", \"The event title\", \"string\") }}"
        }
      },
      "id": "f4499d22-1afc-4ae4-9166-2930a6763451",
      "name": "CreateEvent",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2672,
        528
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YrEdWfp1cuYx8C7F",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "c_fb926399f0d0f2d94a0377068cd9ed9b042ddfaeb509a8e62fba508e6be5d414@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Démonstration Agent IA"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "description": "={{ $fromAI(\"event_description\", \"The event description\", \"string\") }}",
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
          "summary": "={{ $fromAI(\"event_title\", \"The event title\", \"string\") }}"
        }
      },
      "id": "5cecd513-5577-410d-a9da-2d7abd476df7",
      "name": "UpdateEvent",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2784,
        528
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YrEdWfp1cuYx8C7F",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "c_fb926399f0d0f2d94a0377068cd9ed9b042ddfaeb509a8e62fba508e6be5d414@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "Démonstration Agent IA"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "id": "01a1bc59-87a4-4aea-882d-a58cf6ceb612",
      "name": "DeleteEvent",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2912,
        528
      ],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YrEdWfp1cuYx8C7F",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "path": "my-calendar"
      },
      "id": "bcc9bc4a-654f-4f9e-9476-a9f2e8a6f5f1",
      "name": "Google Calendar MCP",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        2512,
        304
      ],
      "webhookId": "f9d9d5ea-6f83-42c8-ae50-ee6c71789bca",
      "typeVersion": 1
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "function_name"
            },
            {
              "name": "payload",
              "type": "object"
            }
          ]
        }
      },
      "id": "5414d867-3cad-4a7a-98f4-16321231c205",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        1920,
        1232
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "ab18304c-4f73-430f-b9fa-2ce4d098e1fa",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "uppercase"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "UPPERCASE"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "606bda79-f401-4de2-be9d-51368c794479",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "lowercase"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "LOWERCASE"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4b22e689-e652-47d2-b737-7be00da9f185",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "random_user_data"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "RANDOM DATA"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "27a75a2c-8058-4a7c-85c1-898cabeac4a1",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "joke"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "JOKE"
            }
          ]
        },
        "options": {}
      },
      "id": "dc0e0e71-ee3f-4342-b247-dc131b33a86e",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        2144,
        1200
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42333f26-8e14-438a-9965-eec31bf4b6a3",
              "name": "converted_text",
              "type": "string",
              "value": "={{ $json.payload.text.toUpperCase() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cfb2f3f1-9a5e-4138-acab-dd056f1809ac",
      "name": "Convert Text to Upper Case",
      "type": "n8n-nodes-base.set",
      "position": [
        2480,
        864
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "42333f26-8e14-438a-9965-eec31bf4b6a3",
              "name": "converted_text",
              "type": "string",
              "value": "={{ $json.payload.text.toLowerCase() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d34a5cf2-d162-48a2-901d-d9df8c78670a",
      "name": "Convert Text to Lower Case",
      "type": "n8n-nodes-base.set",
      "position": [
        2480,
        1072
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "name": "convert_text_case",
        "description": "Call this tool to convert text to lower case or upper case.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "payload": "={\n  \"text\": \"{{ $fromAI(\"text_to_convert\", \"The text to convert\", \"string\") }}\"\n}\n",
            "function_name": "={{ $fromAI(\"function_name\", \"Either lowercase or uppercase\", \"string\") }}"
          },
          "schema": [
            {
              "id": "function_name",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "function_name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "type": "object",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "payload",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "c96cb2b5-7efb-4780-98e0-1b275e723d5b",
      "name": "Convert Text",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1920,
        528
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "sseEndpoint": "https://boostperformance.app.n8n.cloud/mcp/my-calendar/sse"
      },
      "id": "745a1c14-51d1-4421-a223-22ae0b060d11",
      "name": "Calendar MCP",
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "position": [
        1568,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "sseEndpoint": "https://boostperformance.app.n8n.cloud/mcp/my-functions/sse"
      },
      "id": "a09a7803-9c77-4fdd-ab7a-92db5ebac4d7",
      "name": "My Functions",
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "position": [
        1408,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Activez le flux de travail pour faire fonctionner le Déclencheur MCP\nPour rendre le serveur MCP disponible, vous devez activer le flux de travail.\n\n",
        "height": 520,
        "width": 620,
        "color": 3
      },
      "id": "1f4da863-f3f3-4028-9ea4-1b83356c053c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1808,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "my-functions"
      },
      "id": "4157ba6b-991c-4696-b539-7afee3f0d6d3",
      "name": "My Functions Server",
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "position": [
        1920,
        320
      ],
      "webhookId": "83f72547-18b7-4f02-846b-27bf39d1efff",
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Clients MCP\nPour chaque outil ici, vous devez obtenir l'URL de production correspondante à partir des Déclencheurs MCP situés à droite 👉\n",
        "height": 520,
        "width": 440,
        "color": 7
      },
      "id": "5b8fae29-1c3c-41cb-807f-e022814ff15a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1312,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "category": "randomData",
        "randomDataCount": "={{ $json.payload.number }}"
      },
      "id": "92aaa580-1572-44a5-b433-f69c09dbf61c",
      "name": "Random user data",
      "type": "n8n-nodes-base.debugHelper",
      "position": [
        2480,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Essayez ces requêtes exemples avec l'Agent IA\n\n### Mon MCP Fonctions\n1. Utilisez vos outils pour convertir ce texte en minuscules : `EXEMPLE TeXt`\n\n2. Utilisez vos outils pour convertir ce texte en majuscules : `example TeXt`\n\n3. Générez 5 données utilisateur aléatoires, s'il vous plaît.\n\n4. Veuillez obtenir 3 blagues.\n\n### MCP Calendrier\n5. Quel est mon emploi du temps pour la semaine prochaine ?\n\n6. J'ai une réunion avec John demain à 14h. Veuillez l'ajouter à mon calendrier.\n\n7. Modifiez l'heure de ma réunion avec John demain de 14h à 16h, s'il vous plaît.\n\n8. Annulez ma réunion avec John, demain.\n",
        "height": 640,
        "width": 620,
        "color": 7
      },
      "id": "21467ecf-a4fe-4502-b950-8b68fa28be86",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "random_user_data",
        "description": "Generate random user data",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "payload": "={\n  \"number\": {{ $fromAI(\"amount\", \"The amount of user data to generate in integer format\", \"number\") }}\n}",
            "function_name": "random_user_data"
          },
          "schema": [
            {
              "id": "function_name",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "function_name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "type": "object",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "payload",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "d7217616-4c6a-429d-bca4-29643d419424",
      "name": "Generate random user data",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        2080,
        528
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4548cbe-f3fc-4911-901a-d73182d710a9",
              "name": "First name",
              "type": "string",
              "value": "={{ $json.firstname }}"
            },
            {
              "id": "6e573a27-ef03-4254-8f9b-2c471e1540c2",
              "name": "Last name",
              "type": "string",
              "value": "={{ $json.lastname }}"
            },
            {
              "id": "ac5b5806-bf8e-4e1a-a47d-e7180d31e98a",
              "name": "Email",
              "type": "string",
              "value": "={{ $json.email }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dfeca96a-6336-40b6-811e-68d42152378d",
      "name": "Return only some fields",
      "type": "n8n-nodes-base.set",
      "position": [
        2704,
        1360
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=https://official-joke-api.appspot.com/jokes/random/{{ $json.payload.number }}",
        "options": {}
      },
      "id": "c9e6badc-09a1-40d7-8e7c-44aecd5c2150",
      "name": "Joke Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2480,
        1568
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "name": "obtain_jokes",
        "description": "Call this tool to obtain random jokes",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "value": {
            "payload": "={\n  \"number\": {{ $fromAI(\"amount\", \"The amount of jokes to request\", \"number\") }}\n}",
            "function_name": "joke"
          },
          "schema": [
            {
              "id": "function_name",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "function_name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "type": "object",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "payload",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "id": "1d2e954d-4053-4a2f-8608-27e30db7e3be",
      "name": "Random Jokes",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        2240,
        528
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "## Le MCP Mes Fonctions appelle ce sous-flux à chaque fois.\nUn sous-flux est un flux de travail séparé qui peut être appelé par d'autres flux de travail et qui est capable de recevoir des paramètres.\nApprenez-en plus sur les sous-flux **[ici](https://docs.n8n.io/flow-logic/subworkflows/)**\n",
        "height": 1060,
        "width": 1260,
        "color": 7
      },
      "id": "aedf41f5-d40b-4822-a5c5-1a14bea81f89",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1808,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Les outils Google Calendar nécessitent des identifiants\n\n",
        "height": 520,
        "width": 620,
        "color": 5
      },
      "id": "8bcadb44-1f42-4415-8c65-bb981fbac12c",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2448,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "id": "7e152651-c7e6-43bd-8185-71d7b20e18c2",
      "name": "OpenAI 4o",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        848,
        384
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JfkFEyOU1IjUwnPl",
          "name": "OpenAi Boost / UV"
        }
      }
    },
    {
      "parameters": {
        "content": "## Pourquoi choisir le modèle 4o ? 👆\nAprès avoir testé 4o-mini, il a rencontré quelques difficultés à gérer les requêtes liées au calendrier, tandis que le modèle 4o les a traitées avec aisance.\n\nSelon votre prompt et vos outils, 4o-mini pourrait aussi bien fonctionner, mais cela nécessite des tests supplémentaires.\n",
        "height": 240,
        "color": 7
      },
      "id": "fa768f8c-d588-4ba4-9714-f549f87920ba",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        512
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "",
        "height": 140,
        "width": 3060,
        "color": 4
      },
      "id": "93f1d63c-5866-4e1f-98af-1fdd9da0e572",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Apprenez à créer un serveur et un client MCP",
        "height": 80,
        "width": 800,
        "color": 4
      },
      "id": "a844e80f-c2d3-4d3c-ae57-83fb8e51b038",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e54c7d83-1afe-43b7-b751-6a234d032185",
      "name": "Quand Chat reçoit un message",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        704,
        160
      ],
      "webhookId": "7b02318f-1c6b-4f2a-9a4f-b17fa69ea680",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are a helpful assistant who always respond in french language.\nCurrent datetime is {{ $now.toString() }}"
        }
      },
      "id": "45373a7d-7fba-490b-924e-005799d449fc",
      "name": "Agent IA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        928,
        160
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {},
      "id": "38099328-699c-4946-9c07-0d33cb1b021d",
      "name": "Mémoire CHAT Temporaire",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1008,
        368
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.whatsAppTool",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "6ee530f9-bf11-43fe-8971-d2a6d26e92a6",
      "name": "WhatsApp Business Cloud",
      "webhookId": "0537d9e8-3515-4d88-adf9-040be2fc080f"
    }
  ],
  "repo_name": "n8n-boost-performance",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-11-21T18:21:53.875Z",
      "updatedAt": "2024-11-21T18:21:53.875Z",
      "id": "mIoSmAytRJWHrSkp",
      "name": "Dev:Pat"
    }
  ],
  "triggerCount": 3,
  "updatedAt": "2025-08-14T13:17:08.000Z",
  "versionId": "530507cb-6c6a-425f-bc56-26e236c15cc8"
}